// <auto-generated />
using System;
using Demography.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Demography.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20231130142205_InitMigration")]
    partial class InitMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Demography.Domain.Age", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("AgeValue")
                        .HasColumnType("integer")
                        .HasColumnName("age_value");

                    b.Property<Guid?>("DemographyDataId")
                        .HasColumnType("uuid");

                    b.Property<int>("MenQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("men_quantity");

                    b.Property<int>("WomenQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("women_quantity");

                    b.HasKey("Id");

                    b.HasIndex("DemographyDataId");

                    b.ToTable("age");
                });

            modelBuilder.Entity("Demography.Domain.DemographyData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.ToTable("demography_data");
                });

            modelBuilder.Entity("Demography.Domain.Density", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<double>("AreaSize")
                        .HasColumnType("double precision")
                        .HasColumnName("area_size");

                    b.Property<Guid?>("DemographyDataId")
                        .HasColumnType("uuid");

                    b.Property<double>("PopulationDensity")
                        .HasColumnType("double precision")
                        .HasColumnName("population_density");

                    b.Property<int>("PopulationSize")
                        .HasColumnType("integer")
                        .HasColumnName("population_size");

                    b.HasKey("Id");

                    b.HasIndex("DemographyDataId");

                    b.ToTable("density");
                });

            modelBuilder.Entity("Demography.Domain.Ethnos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("DemographyDataId")
                        .HasColumnType("uuid");

                    b.Property<int>("MenQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("men_quantity");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("WomenQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("women_quantity");

                    b.HasKey("Id");

                    b.HasIndex("DemographyDataId");

                    b.ToTable("ethnos");
                });

            modelBuilder.Entity("Demography.Domain.NaturalGrowth", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("BithRate")
                        .HasColumnType("integer")
                        .HasColumnName("bith_rate");

                    b.Property<Guid?>("DemographyDataId")
                        .HasColumnType("uuid");

                    b.Property<int>("MortalityRate")
                        .HasColumnType("integer")
                        .HasColumnName("mortality_rate");

                    b.HasKey("Id");

                    b.HasIndex("DemographyDataId");

                    b.ToTable("natural_growth");
                });

            modelBuilder.Entity("Demography.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("DemographyDataId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("DemographyDataId");

                    b.ToTable("region");
                });

            modelBuilder.Entity("Demography.Domain.Age", b =>
                {
                    b.HasOne("Demography.Domain.DemographyData", "DemographyData")
                        .WithMany("AgeGroups")
                        .HasForeignKey("DemographyDataId");

                    b.Navigation("DemographyData");
                });

            modelBuilder.Entity("Demography.Domain.Density", b =>
                {
                    b.HasOne("Demography.Domain.DemographyData", "DemographyData")
                        .WithMany("DensityGroups")
                        .HasForeignKey("DemographyDataId");

                    b.Navigation("DemographyData");
                });

            modelBuilder.Entity("Demography.Domain.Ethnos", b =>
                {
                    b.HasOne("Demography.Domain.DemographyData", "DemographyData")
                        .WithMany("EthnicGroups")
                        .HasForeignKey("DemographyDataId");

                    b.Navigation("DemographyData");
                });

            modelBuilder.Entity("Demography.Domain.NaturalGrowth", b =>
                {
                    b.HasOne("Demography.Domain.DemographyData", "DemographyData")
                        .WithMany("NaturalGrowthGroups")
                        .HasForeignKey("DemographyDataId");

                    b.Navigation("DemographyData");
                });

            modelBuilder.Entity("Demography.Domain.Region", b =>
                {
                    b.HasOne("Demography.Domain.DemographyData", "DemographyData")
                        .WithMany()
                        .HasForeignKey("DemographyDataId");

                    b.Navigation("DemographyData");
                });

            modelBuilder.Entity("Demography.Domain.DemographyData", b =>
                {
                    b.Navigation("AgeGroups");

                    b.Navigation("DensityGroups");

                    b.Navigation("EthnicGroups");

                    b.Navigation("NaturalGrowthGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
